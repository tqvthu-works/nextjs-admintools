generator client {
  provider = "prisma-client-js"
  output   = "./generated/client-api"
}

datasource db {
  provider = "postgresql"
  url      = env("API_DATABASE_URL")
}

model adonis_schema {
  id             Int       @id @default(autoincrement())
  name           String    @db.VarChar(255)
  batch          Int
  migration_time DateTime? @default(now()) @db.Timestamptz(6)
}

model adonis_schema_versions {
  version Int @id
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model aliexpressers {
  id          Int       @id @default(autoincrement())
  app_id      String    @db.VarChar(255)
  user_id     String    @db.VarChar(255)
  client_id   String?   @db.Uuid
  client_type String    @db.VarChar(20)
  type        String    @db.VarChar(20)
  json        Json      @default("{}")
  expires_at  DateTime? @db.Timestamptz(6)
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  clients     clients?  @relation(fields: [client_id], references: [id], onDelete: Cascade, map: "aliexpressers_client_id_foreign")

  @@unique([app_id, user_id, type], map: "aliexpressers_app_id_user_id_type_unique")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model blacklists {
  id          Int       @id @default(autoincrement())
  key         String    @unique(map: "blacklists_key_unique") @db.VarChar(255)
  description String?   @db.VarChar(255)
  conditions  Json?     @default("{}")
  permissions Json?     @default("{}")
  tags        String?   @db.VarChar(255)
  status      Boolean?  @default(true)
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model clients {
  id                 String          @id @unique(map: "clients_id_unique") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  oauth_id           String?         @db.VarChar(255)
  oauth_provider     String?         @db.VarChar(255)
  email              String          @db.VarChar(255)
  password           String?         @db.VarChar(255)
  previous_passwords Json?           @default("[]")
  access_token       String?         @db.VarChar(255)
  firstname          String?         @db.VarChar(255)
  lastname           String?         @db.VarChar(255)
  avatar_url         String?         @db.VarChar(255)
  app_plan           String?         @db.VarChar(255)
  iana_timezone      String?         @db.VarChar(100)
  is_loyalty         Boolean?        @default(false)
  is_oauth_verified  Boolean?        @default(false)
  test_mode          Boolean?        @default(false)
  metadata           Json?           @default("{}")
  status             Boolean?        @default(true)
  created_at         DateTime?       @db.Timestamptz(6)
  updated_at         DateTime?       @db.Timestamptz(6)
  refresh_token      String?         @db.VarChar(255)
  country_code       String?         @db.VarChar(10)
  aliexpressers      aliexpressers[]
  shops              shops[]

  @@unique([oauth_id, oauth_provider, email], map: "clients_oauth_id_oauth_provider_email_unique")
  @@index([id, oauth_id, oauth_provider, email, status], map: "clients_id_oauth_id_oauth_provider_email_status_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model currencies {
  id                    Int       @id @default(autoincrement())
  code                  String    @unique(map: "currencies_code_unique") @db.VarChar(255)
  name                  String    @db.VarChar(255)
  symbol                String?   @db.VarChar(10)
  countries             Json?     @default("[]")
  exchange_rate         Decimal   @db.Decimal(10, 2)
  exchange_rate_history Json      @default("[]")
  status                Boolean?  @default(true)
  created_at            DateTime? @db.Timestamptz(6)
  updated_at            DateTime? @db.Timestamptz(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shops {
  id                       BigInt    @id @default(autoincrement())
  name                     String    @db.VarChar(255)
  shopify_domain           String    @db.VarChar(100)
  domain                   String?   @db.VarChar(255)
  owner                    String    @db.VarChar(255)
  email                    String    @db.VarChar(255)
  phone                    String?   @db.VarChar(255)
  country                  String?   @db.VarChar(100)
  country_code             String    @db.VarChar(10)
  primary_locale           String?   @db.VarChar(255)
  currency_code            String?   @db.VarChar(10)
  timezone                 String?   @db.VarChar(100)
  iana_timezone            String?   @db.VarChar(255)
  shopify_plan             String    @db.VarChar(100)
  app_plan                 String?   @db.VarChar(100)
  access_token             String?   @db.VarChar(100)
  sf_access_token          String?   @db.VarChar(100)
  shopify_scopes           String?
  app_key                  String?   @unique(map: "shops_app_key_unique") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  usage                    Json      @default("{}")
  settings                 Json?     @default("{}")
  charge_id                Int?
  charge_interval          String?   @db.VarChar(50)
  is_usage_charge_approved Boolean?  @default(false)
  downgradable             Boolean?  @default(false)
  quest                    Json?     @default("{\"review_written\": false, \"content_generated\": false, \"extension_installed\": false}")
  is_loyalty               Boolean   @default(false)
  is_onboarded             Boolean?  @default(false)
  test_mode                Boolean?  @default(false)
  status                   Boolean?  @default(true)
  uninstalled_at           DateTime? @db.Timestamptz(6)
  created_at               DateTime? @db.Timestamptz(6)
  updated_at               DateTime? @db.Timestamptz(6)
  client_id                String?   @db.Uuid
  shopify_app_id           String?   @db.VarChar(100)
  clients                  clients?  @relation(fields: [client_id], references: [id], onDelete: Cascade, map: "shops_client_id_foreign")

  @@index([id, client_id, shopify_domain, shopify_plan, app_plan, status], map: "shops_id_client_id_shopify_domain_shopify_plan_app_plan_status_")
}
